<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.fly.dao.FAirplaneMapper">
  <resultMap id="BaseResultMap" type="com.ict.fly.domain.entity.FAirplane">
    <id column="plane_id" jdbcType="INTEGER" property="planeId" />
    <result column="plane_type" jdbcType="VARCHAR" property="planeType" />
    <result column="plane_seat" jdbcType="INTEGER" property="planeSeat" />
    <result column="plane_name" jdbcType="VARCHAR" property="planeName" />
    <result column="plane_locationx" jdbcType="INTEGER" property="planeLocationx" />
    <result column="plane_locationy" jdbcType="INTEGER" property="planeLocationy" />
    <result column="plane_use" jdbcType="INTEGER" property="planeUse" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    plane_id, plane_type, plane_seat, plane_name, plane_locationx, plane_locationy, plane_use
  </sql>
  <select id="selectByExample" parameterType="com.ict.fly.domain.entity.FAirplaneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_airplane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from f_airplane
    where plane_id = #{planeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from f_airplane
    where plane_id = #{planeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ict.fly.domain.entity.FAirplaneExample">
    delete from f_airplane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ict.fly.domain.entity.FAirplane">
    insert into f_airplane (plane_id, plane_type, plane_seat, 
      plane_name, plane_locationx, plane_locationy, 
      plane_use)
    values (#{planeId,jdbcType=INTEGER}, #{planeType,jdbcType=VARCHAR}, #{planeSeat,jdbcType=INTEGER}, 
      #{planeName,jdbcType=VARCHAR}, #{planeLocationx,jdbcType=INTEGER}, #{planeLocationy,jdbcType=INTEGER}, 
      #{planeUse,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ict.fly.domain.entity.FAirplane">
    insert into f_airplane
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planeId != null">
        plane_id,
      </if>
      <if test="planeType != null">
        plane_type,
      </if>
      <if test="planeSeat != null">
        plane_seat,
      </if>
      <if test="planeName != null">
        plane_name,
      </if>
      <if test="planeLocationx != null">
        plane_locationx,
      </if>
      <if test="planeLocationy != null">
        plane_locationy,
      </if>
      <if test="planeUse != null">
        plane_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planeId != null">
        #{planeId,jdbcType=INTEGER},
      </if>
      <if test="planeType != null">
        #{planeType,jdbcType=VARCHAR},
      </if>
      <if test="planeSeat != null">
        #{planeSeat,jdbcType=INTEGER},
      </if>
      <if test="planeName != null">
        #{planeName,jdbcType=VARCHAR},
      </if>
      <if test="planeLocationx != null">
        #{planeLocationx,jdbcType=INTEGER},
      </if>
      <if test="planeLocationy != null">
        #{planeLocationy,jdbcType=INTEGER},
      </if>
      <if test="planeUse != null">
        #{planeUse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ict.fly.domain.entity.FAirplaneExample" resultType="java.lang.Long">
    select count(*) from f_airplane
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update f_airplane
    <set>
      <if test="record.planeId != null">
        plane_id = #{record.planeId,jdbcType=INTEGER},
      </if>
      <if test="record.planeType != null">
        plane_type = #{record.planeType,jdbcType=VARCHAR},
      </if>
      <if test="record.planeSeat != null">
        plane_seat = #{record.planeSeat,jdbcType=INTEGER},
      </if>
      <if test="record.planeName != null">
        plane_name = #{record.planeName,jdbcType=VARCHAR},
      </if>
      <if test="record.planeLocationx != null">
        plane_locationx = #{record.planeLocationx,jdbcType=INTEGER},
      </if>
      <if test="record.planeLocationy != null">
        plane_locationy = #{record.planeLocationy,jdbcType=INTEGER},
      </if>
      <if test="record.planeUse != null">
        plane_use = #{record.planeUse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update f_airplane
    set plane_id = #{record.planeId,jdbcType=INTEGER},
      plane_type = #{record.planeType,jdbcType=VARCHAR},
      plane_seat = #{record.planeSeat,jdbcType=INTEGER},
      plane_name = #{record.planeName,jdbcType=VARCHAR},
      plane_locationx = #{record.planeLocationx,jdbcType=INTEGER},
      plane_locationy = #{record.planeLocationy,jdbcType=INTEGER},
      plane_use = #{record.planeUse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ict.fly.domain.entity.FAirplane">
    update f_airplane
    <set>
      <if test="planeType != null">
        plane_type = #{planeType,jdbcType=VARCHAR},
      </if>
      <if test="planeSeat != null">
        plane_seat = #{planeSeat,jdbcType=INTEGER},
      </if>
      <if test="planeName != null">
        plane_name = #{planeName,jdbcType=VARCHAR},
      </if>
      <if test="planeLocationx != null">
        plane_locationx = #{planeLocationx,jdbcType=INTEGER},
      </if>
      <if test="planeLocationy != null">
        plane_locationy = #{planeLocationy,jdbcType=INTEGER},
      </if>
      <if test="planeUse != null">
        plane_use = #{planeUse,jdbcType=INTEGER},
      </if>
    </set>
    where plane_id = #{planeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ict.fly.domain.entity.FAirplane">
    update f_airplane
    set plane_type = #{planeType,jdbcType=VARCHAR},
      plane_seat = #{planeSeat,jdbcType=INTEGER},
      plane_name = #{planeName,jdbcType=VARCHAR},
      plane_locationx = #{planeLocationx,jdbcType=INTEGER},
      plane_locationy = #{planeLocationy,jdbcType=INTEGER},
      plane_use = #{planeUse,jdbcType=INTEGER}
    where plane_id = #{planeId,jdbcType=INTEGER}
  </update>
  <select id="findByName" parameterType="string" resultType="com.ict.fly.domain.entity.FAirplane" resultMap="BaseResultMap">
    select * from f_airplane where plane_type = #{plane_type}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from f_airplane where plane_use = 0;
  </select>
</mapper>